<h1>MERK !_FULL_VERSION_!</h1>

<p><a href="https://github.com/nutjob-laboratories/merk">Official source code repository</a></p>
<h1 id="table-of-contents">Table of contents</h1>
<ul>
<li><a href="#Summary">Summary</a></li>
<li><a href="#making-merk-portable-on-windows">Making MERK Portable on Windows</a></li>
<li><a href="#python-requirements">Python Requirements</a></li>
<li><a href="#usage">Usage</a></li>
<li><a href="#commands">Commands</a></li>
<li><a href="#example-commandline-usage">Example commandline usage</a></li>
<li><a href="#why-does-merk-exist">Why does MERK exist?</a></li>
<li><a href="#what-does-merk-mean">What does MERK mean?</a></li>
<li><a href="#does-merk-need-any-help">Does MERK need any help?</a></li>
</ul>
<h1 id="summary">Summary</h1>
<p><strong>MERK</strong> is a graphical <a href="https://www.gnu.org/licenses/gpl-3.0.en.html">open source</a> <a href="https://en.wikipedia.org/wiki/Internet_Relay_Chat">Internet relay chat</a> client. The current development version is <strong>!_FULL_VERSION_!</strong>. It uses a <a href="https://en.wikipedia.org/wiki/Multiple-document_interface">multiple-document interface</a>, much like the popular Windows IRC client <a href="https://www.mirc.com/">mIRC</a>.  <strong>MERK</strong> is written in Python 3, using the <a href="https://pypi.org/project/PyQt5/">PyQt5</a> and <a href="https://twistedmatrix.com/trac/">Twisted</a> libraries, and runs on both Windows and Linux. <strong>MERK</strong> is updated frequently with new features and bugfixes.</p>
<p><strong>MERK</strong> is still in development, but it works, and can be used for most IRC activities.</p>
<p>Join me on the official <strong>MERK</strong> IRC channel, <strong>#merk</strong> on the Libera Chat network! Connect to  Libera in the client as one of the built-in server suggestions, or at <strong>irc.libera.chat</strong>, port <strong>6667</strong> (you can also connect via SSL on port <strong>6697</strong>). Honestly, I work a lot, so I&#39;m almost always idle, but I pop in and chat a few times a day!</p>
<h1 id="making-merk-portable-on-windows">Making MERK Portable on Windows</h1>
<p>If you want to run <strong>MERK</strong> from a USB stick, and save all configuration and user data to the USB stick (or wherever you&#39;re running <strong>MERK</strong> from), it&#39;s really easy. First, open <a href="https://en.wikipedia.org/wiki/Windows_Notepad">Notepad</a>, and enter this into a new document:</p>
<p><code>merk.exe --config-local</code></p>
<p>Save this file to wherever you extracted <strong>MERK</strong> to. You can give it any name you&#39;d like, as long as the file extension you save the file to is <code>BAT</code>. So, if you&#39;d like to name the file &quot;MyMerk&quot;, you&#39;d save the file with the name <code>MyMerk.bat</code>. You&#39;re done! You&#39;ve made <strong>MERK</strong> portable.</p>
<p>Whenever you want to run <strong>MERK</strong> off of your USB stick, double click the <code>.bat</code> file you created instead of <code>merk.exe</code>. This will run <strong>MERK</strong> completely normally, only all configuration files will be saved to the same directory <strong>MERK</strong> &quot;lives&quot; in. So, you can take <strong>MERK</strong> with you on your USB stick, and it will keep all the configuration files and logs on the USB stick.</p>
<h1 id="python-requirements">Python Requirements</h1>
<p><strong>MERK</strong> requires Python 3, <a href="https://pypi.org/project/PyQt5/">PyQt5</a>, and <a href="https://twistedmatrix.com/trac/">Twisted</a>. PyQt5 and Twisted can be installed by using <a href="https://pypi.org/project/pip/"><strong>pip</strong></a>:</p>
<pre><code>pip <span class="hljs-keyword">install</span> pyqt5
pip <span class="hljs-keyword">install</span> Twisted
</code></pre><p>To connect to IRC servers via SSL, two additional libraries may be needed:</p>
<pre><code>pip <span class="hljs-keyword">install</span> pyOpenSSL
pip <span class="hljs-keyword">install</span> service_identity
</code></pre><p><strong>MERK</strong> is being developed with Python 3.13 on Windows 11 and Linux Mint.</p>
<p>If you&#39;re running Windows, and you&#39;re getting errors when trying to run <strong>MERK</strong>, you may have to install another library, <a href="https://pypi.org/project/pywin32/">pywin32</a>. You can also install this with <a href="https://pypi.org/project/pip/"><strong>pip</strong></a>:</p>
<pre><code>pip <span class="hljs-keyword">install</span> pywin32
</code></pre><p>To run properly on Linux, the latest version of all required software is recommended.</p>
<p>There are three libraries that comes bundled with <strong>MERK</strong>:</p>
<ul>
<li><a href="https://github.com/twisted/qt5reactor">qt5reactor 0.6.3</a></li>
<li><a href="https://github.com/barrust/pyspellchecker">pyspellchecker 0.8.3</a></li>
<li><a href="https://github.com/carpedm20/emoji">emoji 2.15.0</a></li>
</ul>
<h1 id="usage">Usage</h1>
<pre><code>usage: python merk.py [<span class="hljs-comment">--ssl] [-p PASSWORD] [-c CHANNEL[:KEY]] [-a NICKNAME]</span>
                      [-C SERVER:PORT[:PASSWORD]] [-n NICKNAME] [-u USERNAME]
                      [-S SERVER:PORT[:PASSWORD]] [-r REALNAME] [-h] [-d] [-x]
                      [-t] [-R] [-o] [-f] [-s FILENAME][<span class="hljs-comment">--config-name NAME] </span>
                      [<span class="hljs-comment">--config-directory DIRECTORY] [--config-local]</span>
                      [<span class="hljs-comment">--scripts-directory DIRECTORY] [--user-file FILENAME]</span>
                      [<span class="hljs-comment">--config-file FILENAME] [--reset] [--reset-user]</span>
                      [<span class="hljs-comment">--reset-all] [-Q NAME] [-D] [-L]</span>
                      [SERVER] [PORT]


Connection:
  SERVER                Server to connect to
  PORT                  Server port to connect to (6667)
  <span class="hljs-comment">--ssl, --tls          Use SSL/TLS to connect to IRC</span>
  -p, <span class="hljs-comment">--password PASSWORD</span>
                        <span class="hljs-keyword">Use</span> <span class="hljs-keyword">server</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">connect</span>
  -c, <span class="hljs-comment">--channel CHANNEL[:KEY]</span>
                        <span class="hljs-keyword">Join</span> channel <span class="hljs-keyword">on</span> <span class="hljs-keyword">connection</span>
  -C, <span class="hljs-comment">--connect SERVER:PORT[:PASSWORD]</span>
                        <span class="hljs-keyword">Connect</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">server</span> via TCP/IP
  -S, <span class="hljs-comment">--connectssl SERVER:PORT[:PASSWORD]</span>
                        <span class="hljs-keyword">Connect</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">server</span> via SSL/TLS

<span class="hljs-keyword">User</span> Information:
  -n, <span class="hljs-comment">--nickname NICKNAME</span>
                        <span class="hljs-keyword">Use</span> this nickname <span class="hljs-keyword">to</span> <span class="hljs-keyword">connect</span>
  -u, <span class="hljs-comment">--username USERNAME</span>
                        <span class="hljs-keyword">Use</span> this username <span class="hljs-keyword">to</span> <span class="hljs-keyword">connect</span>
  -a, <span class="hljs-comment">--alternate NICKNAME</span>
                        <span class="hljs-keyword">Use</span> this alternate nickname <span class="hljs-keyword">to</span> <span class="hljs-keyword">connect</span>
  -r, <span class="hljs-comment">--realname REALNAME</span>
                        <span class="hljs-keyword">Use</span> this realname <span class="hljs-keyword">to</span> <span class="hljs-keyword">connect</span>

Options:
  -h, <span class="hljs-comment">--help            Show help and usage information</span>
  -d, <span class="hljs-comment">--donotsave       Do not save new user settings</span>
  -x, <span class="hljs-comment">--donotexecute    Do not execute connection script</span>
  -t, <span class="hljs-comment">--reconnect       Reconnect to servers on disconnection</span>
  -R, <span class="hljs-comment">--run             Don't ask for connection information on start</span>
  -o, <span class="hljs-comment">--on-top          Application window always on top</span>
  -f, <span class="hljs-comment">--full-screen     Application window displays full screen</span>
  -s, <span class="hljs-comment">--script FILE     Use a file as a connection script</span>

Files <span class="hljs-keyword">and</span> Directories:
  <span class="hljs-comment">--config-name NAME    Name of the configuration file directory (default: .merk)</span>
  <span class="hljs-comment">--config-directory DIRECTORY</span>
                        Location <span class="hljs-keyword">to</span> <span class="hljs-keyword">store</span> configuration files
  <span class="hljs-comment">--config-local        Store configuration files in install directory</span>
  <span class="hljs-comment">--scripts-directory DIRECTORY</span>
                        Location <span class="hljs-keyword">to</span> look <span class="hljs-keyword">for</span> script files
  <span class="hljs-comment">--user-file FILE      File to use for user data</span>
  <span class="hljs-comment">--config-file FILE    File to use for configuration data</span>
  <span class="hljs-comment">--reset               Reset configuration file to default values</span>
  <span class="hljs-comment">--reset-user          Reset user file to default values</span>
  <span class="hljs-comment">--reset-all           Reset all configuration files to default values</span>

Appearance:
  -Q, <span class="hljs-comment">--qtstyle NAME    Set Qt widget style (default: Windows)</span>
  -D, <span class="hljs-comment">--dark            Run in dark mode</span>
  -L, <span class="hljs-comment">--light           Run in light mode</span>
</code></pre><h1 id="commands">Commands</h1>
<p>All of these commands can be issued from the text input widget, or from scripts.</p>
<table>
<thead>
<tr>
<th>Commands</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>/alias [TOKEN] [TEXT...]</code></td>
<td>Creates an alias that can be referenced by <code>$TOKEN</code>. Call with only <code>TOKEN</code> as an argument to see <code>TOKEN</code>'s value. If <code>TEXT</code> is a mathematical statement, it will be evaluated and the result used as the alias' value. Operations supported are parenthesis, addition (<code>+</code>), subtraction (<code>-</code>), multiplication (<code>*</code>), division (<code>/</code>), modulus (<code>%</code>), and exponents(<code>**</code>).  Call without any arguments to see all aliases and their values</td>
</tr>
<tr>
<td><code>/away [MESSAGE]</code></td>
<td>Sets status as &quot;away&quot;</td>
</tr>
<tr>
<td><code>/back</code></td>
<td>Sets status as &quot;back&quot;</td>
</tr>
<tr>
<td><code>/cascade</code></td>
<td>Cascades all subwindows</td>
</tr>
<tr>
<td><code>/clear [SERVER] [WINDOW]</code></td>
<td>Clears a window&#39;s chat display. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/close [SERVER] [WINDOW]</code></td>
<td>Closes a subwindow. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/config [SETTING] [VALUE...]</code></td>
<td>Changes a setting, or searches and displays one or all settings in the configuration file.  <strong>*Caution*</strong>: use at your own risk!</td>
</tr>
<tr>
<td><code>/config export [FILENAME]</code></td>
<td>Exports the current configuration file. <strong>*Caution*</strong>: use at your own risk!</td>
</tr>
<tr>
<td><code>/config import [FILENAME]</code></td>
<td>Imports a configuration file into settings.  <strong>*Caution*</strong>: use at your own risk!</td>
</tr>
<tr>
<td><code>/config restart</code></td>
<td>Restarts MERK, using the same command-line used to start MERK. <strong>*Caution*</strong>: use at your own risk!</td>
</tr>
<tr>
<td><code>/connect SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server</td>
</tr>
<tr>
<td><code>/connectssl SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server via SSL</td>
</tr>
<tr>
<td><code>context WINDOW_NAME</code></td>
<td>Moves execution of the script to <code>WINDOW_NAME</code>; <b>can only be called from scripts</b></td>
</tr>
<tr>
<td><code>/ctcp REQUEST USER</code></td>
<td>Sends a CTCP request to <code>USER</code>; valid <code>REQUEST</code>s are TIME, VERSION, USERINFO, SOURCE, or FINGER</td>
</tr>
<tr>
<td><code>/delay SECONDS COMMAND...</code></td>
<td>Executes <code>COMMAND</code> after <code>SECONDS</code> seconds</td>
</tr>
<tr>
<td><code>/edit [FILENAME]</code></td>
<td>Opens a script in the editor</td>
</tr>
<tr>
<td><code>end</code></td>
<td>Immediately ends a script; <b>can only be called from scripts</b></td>
</tr>
<tr>
<td><code>exclude WINDOW...</code></td>
<td>Prevents a script from executing in <code>WINDOW</code>'s context. Multiple <code>WINDOW</code>s can be specified. <b>Can only be called from scripts</b>.
</td>
</tr>
<tr>
<td><code>/exit [SECONDS]</code></td>
<td>Exits the client, with an optional pause of <code>SECONDS</code> before exit</td>
</tr>
<tr>
<td><code>/find [TERMS]</code></td>
<td>Finds filenames that can be found by other commands; use * for multi-character wildcards, and ? for single character wildcards</td>
</tr>
<tr>
<td><code>/focus [SERVER] [WINDOW]</code></td>
<td>Sets focus on a subwindow. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/fullscreen</code></td>
<td>Toggles full screen mode</td>
</tr>
<tr>
<td><code>goto LINE_NUMBER</code></td>
<td>Moves execution of the script to <code>LINE_NUMBER</code>. The only script-only command that can be issued from an <code>if</code> command. Cannot be used to move execution to a line that consists of a script-only command other than <code>end</code>. <b>Can only be called from scripts</b></td>
</tr>
<tr>
<td><code>halt [MESSAGE...]</code></td>
<td>Halts a script's execution, and displays an error <code>MESSAGE</code> with line number and file name. <b>Can only be called from scripts</b></td>
</tr>
<tr>
<td><code>/help [COMMAND]</code></td>
<td>Displays command usage information</td>
</tr>
<tr>
<td><code>/hide [SERVER] [WINDOW]</code></td>
<td>Hides a subwindow. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>if VALUE1 OPERATOR VALUE2 COMMAND...</code></td>
<td>Executes <code>COMMAND</code> if <code>VALUE1</code> and <code>VALUE2</code> are true, depending on <code>OPERATOR</code>. Valid <code>OPERATOR</code>s are <code>(is)</code> (result is true if <code>VALUE1</code> and <code>VALUE2</code> are equal), <code>(not)</code> (result is true if <code>VALUE1</code> and <code>VALUE2</code> are not equal), <code>(in)</code> (result is true if <code>VALUE1</code> is contained in <code>VALUE2</code>), <code>(gt)</code> (result is true if <code>VALUE1</code> is a greater number than <code>VALUE2</code>), <code>(lt)</code> (result is true if <code>VALUE1</code> is a lesser number than <code>VALUE2</code>), <code>(ne)</code> (result is true if <code>VALUE1</code> is not an equal number to <code>VALUE2</code>), and <code>(eq)</code> (result is true if <code>VALUE1</code> is an equal number to <code>VALUE2</code>). <b>Can only be called from scripts</b></td>
</tr>
<tr>
<td><code>/ignore USER</code></td>
<td>Hides a <code>USER</code>&#39;s chat; use <code>*</code> as multiple character wildcards, and <code>?</code> as single character wildcards</td>
</tr>
<tr>
<td><code>insert FILE [FILE...]</code></td>
<td>Inserts the contents of <code>FILE</code> where it appears into the script; <b>can only be called by scripts</b></td>
</tr>
<tr>
<td><code>/invite NICKNAME CHANNEL</code></td>
<td>Sends a channel invitation</td>
</tr>
<tr>
<td><code>/join CHANNEL [KEY]</code></td>
<td>Joins a channel</td>
</tr>
<tr>
<td><code>/kick CHANNEL NICKNAME [MESSAGE]</code></td>
<td>Kicks a user from a channel</td>
</tr>
<tr>
<td><code>/knock CHANNEL [MESSAGE]</code></td>
<td>Requests an invitation to a channel</td>
</tr>
<tr>
<td><code>/list [TERMS]</code></td>
<td>Lists or searches channels on the server; use &quot;*&quot; for multi-character wildcard and &quot;?&quot; for single character</td>
</tr>
<tr>
<td><code>/log</code></td>
<td>Opens the log manager</td>
</tr>
<tr>
<td><code>/macro NAME SCRIPT [USAGE] [HELP]</code></td>
<td>Creates a macro, executable with <code>/NAME</code>, that executes <code>SCRIPT</code></td>
</tr>
<tr>
<td><code>/maximize [SERVER] [WINDOW]</code></td>
<td>Maximizes a subwindow. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/me MESSAGE...</code></td>
<td>Sends a CTCP action message to the current chat</td>
</tr>
<tr>
<td><code>/minimize [SERVER] [WINDOW]</code></td>
<td>Minimizes a subwindow. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/mode TARGET MODE...</code></td>
<td>Sets a mode on a channel or user</td>
</tr>
<tr>
<td><code>/msg TARGET MESSAGE...</code></td>
<td>Sends a message</td>
</tr>
<tr>
<td><code>/move [SERVER] [WINDOW] X Y</code></td>
<td>Moves a subwindow to <code>X</code> (left and right) and <code>Y</code> (up and down) coordinates. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/msgbox MESSAGE...</code></td>
<td>Displays a messagebox with a short message</td>
</tr>
<tr>
<td><code>/next</code></td>
<td>Shifts focus to the "next" subwindow</td>
</tr>
<tr>
<td><code>/nick NEW_NICKNAME</code></td>
<td>Changes your nickname</td>
</tr>
<tr>
<td><code>/notice TARGET MESSAGE...</code></td>
<td>Sends a notice</td>
</tr>
<tr>
<td><code>only WINDOW...</code></td>
<td>Restricts a script to only executing in <code>WINDOW</code>'s context. Multiple <code>WINDOW</code>s can be specified. <b>Can only be called from scripts</b>.
</td>
</tr>
<tr>
<td><code>/oper USERNAME PASSWORD</code></td>
<td>Logs into an operator account</td>
</tr>
<tr>
<td><code>/part CHANNEL [MESSAGE]</code></td>
<td>Leaves a channel</td>
</tr>
<tr>
<td><code>/ping USER [TEXT]</code></td>
<td>Sends a CTCP ping to a user</td>
</tr>
<tr>
<td><code>/play FILENAME</code></td>
<td>Plays a WAV file</td>
</tr>
<tr>
<td><code>/previous</code></td>
<td>Shifts focus to the "previous" subwindow</td>
</tr>
<tr>
<td><code>/print [WINDOW] TEXT...</code></td>
<td>Prints text to a window</td>
</tr>
<tr>
<td><code>/prints [WINDOW] TEXT...</code></td>
<td>Prints a system message to a window</td>
</tr>
<tr>
<td><code>/private NICKNAME [MESSAGE]</code></td>
<td>Opens a private chat subwindow for <code>NICKNAME</code></td>
</tr>
<tr>
<td><code>/quit [MESSAGE]</code></td>
<td>Disconnects from the current IRC server</td>
</tr>
<tr>
<td><code>/quitall [MESSAGE]</code></td>
<td>Disconnects from all IRC servers</td>
</tr>
<tr>
<td><code>/random ALIAS LOW HIGH</code></td>
<td>Generates a random number between <code>LOW</code> and <code>HIGH</code> and stores it in <code>ALIAS</code></td>
</tr>
<tr>
<td><code>/raw TEXT...</code></td>
<td>Sends unprocessed data to the server</td>
</tr>
<tr>
<td><code>/readme</code></td>
<td>Opens the MERK README in a subwindow</td>
</tr>
<tr>
<td><code>/reclaim NICKNAME</code></td>
<td>Attempts to change nickname to <code>NICKNAME</code> until claimed</td>
</tr>
<tr>
<td><code>/reconnect SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server, reconnecting on disconnection</td>
</tr>
<tr>
<td><code>/reconnectssl SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server via SSL, reconnecting on disconnection</td>
</tr>
<tr>
<td><code>/refresh</code></td>
<td>Requests a new list of channels from the server</td>
</tr>
<tr>
<td><code>/rem [TEXT...]</code></td>
<td>Does nothing. Can be used as a target for <code>goto</code></td>
</tr>
<tr>
<td><code>/resize [SERVER] [WINDOW] WIDTH HEIGHT&nbsp;&nbsp;</code></td>
<td>Resizes a subwindow. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>restrict SERVER|CHANNEL|PRIVATE</code></td>
<td>Prevents a script from running if it is not being ran in a <code>SERVER</code>, <code>CHANNEL</code>, or <code>PRIVATE</code> window. Up to two windows types can be passed. <b>Can only be called from scripts</b></td>
</tr>
<tr>
<td><code>/restore [SERVER] [WINDOW]</code></td>
<td>Restores a subwindow. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/s FILENAME [ARGUMENTS]</code></td>
<td>A shortcut for the <code>/script</code> command</td>
</tr>
<tr>
<td><code>/script FILENAME [ARGUMENTS]</code></td>
<td>Executes a list of commands in a file</td>
</tr>
<tr>
<td><code>/settings</code></td>
<td>Opens the settings dialog</td>
</tr>
<tr>
<td><code>/shell ALIAS COMMAND...</code></td>
<td>Executes an external program, and stores the output in an alias</td>
</tr>
<tr>
<td><code>/show [SERVER] [WINDOW]</code></td>
<td>Shows a subwindow, if hidden; otherwise, shifts focus to that window. <code>SERVER</code> is optional if <code>WINDOW</code> belongs to the same context</td>
</tr>
<tr>
<td><code>/style</code></td>
<td>Edits the current window&#39;s style</td>
</tr>
<tr>
<td><code>/tile</code></td>
<td>Tiles all subwindows</td>
</tr>
<tr>
<td><code>/time</code></td>
<td>Requests server time</td>
</tr>
<tr>
<td><code>/topic CHANNEL NEW_TOPIC</code></td>
<td>Sets a channel topic</td>
</tr>
<tr>
<td><code>/unalias TOKEN</code></td>
<td>Deletes the alias referenced by <code>$TOKEN</code></td>
</tr>
<tr>
<td><code>/unignore USER</code></td>
<td>Un-hides a <code>USER</code>&#39;s chat. To un-hide all users, use <code>*</code> as the argument</td>
</tr>
<tr>
<td><code>usage NUMBER [MESSAGE...]</code></td>
<td>Prevents a script from running unless at least <code>NUMBER</code> arguments are passed to it, and displays <code>MESSAGE</code>. <b>Can only be called by scripts</b></td>
</tr>
<tr>
<td><code>/user [SETTING] [VALUE...]</code></td>
<td>Changes a user setting, or searches and displays one or all settings in the user configuration file. Pass <code>*</code> as <code>VALUE</code> to set a setting as blank. <strong>*Caution*</strong>: use at your own risk!</td>
</tr>
<tr>
<td><code>/version [SERVER]</code></td>
<td>Requests server version</td>
</tr>
<tr>
<td><code>wait SECONDS</code></td>
<td>Pauses script execution for <code>SECONDS</code>; <b>can only be called from scripts</b></td>
</tr>
<tr>
<td><code>/who NICKNAME [o]</code></td>
<td>Requests user information from the server</td>
</tr>
<tr>
<td><code>/whois NICKNAME [SERVER]</code></td>
<td>Requests user information from the server</td>
</tr>
<tr>
<td><code>/whowas NICKNAME [COUNT] [SERVER]</code></td>
<td>Requests information about previously connected users</td>
</tr>
<tr>
<td><code>/window [COMMAND] [X] [Y]</code></td>
<td>Manipulates the main application window. Valid commands are <b><code>move</code></b>, <b><code>size</code></b>, <b><code>maximize</code></b>, <b><code>minimize</code></b>, and <b><code>restore</code></b>. Call with no arguments to see main window information and a list of subwindows</td>
</tr>
<tr>
<td><code>/xconnect SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server &amp; executes connection script</td>
</tr>
<tr>
<td><code>/xconnectssl SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server via SSL &amp; executes connection script</td>
</tr>
<tr>
<td><code>/xreconnect SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server &amp; executes connection script, reconnecting on disconnection</td>
</tr>
<tr>
<td><code>/xreconnectssl SERVER [PORT] [PASSWORD]</code></td>
<td>Connects to an IRC server via SSL &amp; executes connection script, reconnecting on disconnection</td>
</tr>
</tbody>
</table>
<h1 id="example-commandline-usage">Example Commandline Usage</h1>
<p>In the following examples, the first commandline is how you would do the task using <strong>MERK</strong> as a Python script, and second commandline is how you would do it using the <strong>MERK</strong> Windows executable. Note that the commandlines, other than the initial executable, are the same!</p>
<p>Let&#39;s assume that you want to use the commandline to connect <strong>MERK</strong> to the <code>2600.net</code> network and join the <code>#linux</code> channel:</p>
<pre><code>python merk<span class="hljs-selector-class">.py</span> --channel <span class="hljs-string">"#linux"</span> irc.<span class="hljs-number">2600</span><span class="hljs-selector-class">.net</span> <span class="hljs-number">6667</span>
</code></pre><pre><code>merk<span class="hljs-selector-class">.exe</span> --channel <span class="hljs-string">"#linux"</span> irc.<span class="hljs-number">2600</span><span class="hljs-selector-class">.net</span> <span class="hljs-number">6667</span>
</code></pre><p>Easy, right? Now let&#39;s try something a little more complex. Let&#39;s say you want to connect the the <code>Libera</code> network, which uses SSL/TLS. You want to use a different nickname than you normally use; you want to use the nickname <code>merker</code>, but you don&#39;t want to save this nickname as your default. When you join the network, you want to join two channels: <code>#python</code> and <code>#merk</code>:</p>
<pre><code>python merk<span class="hljs-selector-class">.py</span> --donotsave -n merker -c <span class="hljs-string">"#python"</span> -c <span class="hljs-string">"#merk"</span> --ssl irc<span class="hljs-selector-class">.libera</span><span class="hljs-selector-class">.chat</span> <span class="hljs-number">6697</span>
</code></pre><pre><code>merk<span class="hljs-selector-class">.exe</span> --donotsave -n merker -c <span class="hljs-string">"#python"</span> -c <span class="hljs-string">"#merk"</span> --ssl irc<span class="hljs-selector-class">.libera</span><span class="hljs-selector-class">.chat</span> <span class="hljs-number">6697</span>
</code></pre><p>You can do some things with the commandline that you can&#39;t do with the GUI. Let&#39;s say that you&#39;re using <strong>MERK</strong> on a computer that someone else also uses for <strong>MERK</strong>. You want to store your configuration files in a different folder, just for your use. You always want to use light mode, no matter what the configuration file says, and you&#39;ve stored some <strong>MERK</strong> scripts in the &quot;C:\Merk_Scripts&quot; folder. You don&#39;t want <strong>MERK</strong> to ask you for a server to connect to, you just want it to start up, and you can choose a server from the &quot;IRC&quot; menu:</p>
<pre><code>python merk<span class="hljs-selector-class">.py</span> --light --config-name <span class="hljs-selector-class">.mymerk</span> --scripts-directory <span class="hljs-string">"C:\Merk_Scripts"</span> --run
</code></pre><pre><code>merk<span class="hljs-selector-class">.exe</span> --light --config-name <span class="hljs-selector-class">.mymerk</span> --scripts-directory <span class="hljs-string">"C:\Merk_Scripts"</span> --run
</code></pre><p>Now, let&#39;s try something that commonly done with other IRC clients: connecting to multiple servers automatically on startup. You want to use your standard settings, but connect to three different IRC servers as soon as you run <strong>MERK</strong>: you want to connect to the 2600 network and DALNet, using standard TCP/IP,and Libera, using SSL:</p>
<pre><code><span class="hljs-selector-tag">python</span> <span class="hljs-selector-tag">merk</span><span class="hljs-selector-class">.py</span> <span class="hljs-selector-tag">-C</span> <span class="hljs-selector-tag">irc</span><span class="hljs-selector-class">.2600</span><span class="hljs-selector-class">.net</span><span class="hljs-selector-pseudo">:6667</span> <span class="hljs-selector-tag">-S</span> <span class="hljs-selector-tag">irc</span><span class="hljs-selector-class">.libera</span><span class="hljs-selector-class">.chat</span><span class="hljs-selector-pseudo">:6697</span> <span class="hljs-selector-tag">-C</span> <span class="hljs-selector-tag">us</span><span class="hljs-selector-class">.dal</span><span class="hljs-selector-class">.net</span><span class="hljs-selector-pseudo">:6667</span>
</code></pre><pre><code><span class="hljs-selector-tag">merk</span><span class="hljs-selector-class">.exe</span> <span class="hljs-selector-tag">-C</span> <span class="hljs-selector-tag">irc</span><span class="hljs-selector-class">.2600</span><span class="hljs-selector-class">.net</span><span class="hljs-selector-pseudo">:6667</span> <span class="hljs-selector-tag">-S</span> <span class="hljs-selector-tag">irc</span><span class="hljs-selector-class">.libera</span><span class="hljs-selector-class">.chat</span><span class="hljs-selector-pseudo">:6697</span> <span class="hljs-selector-tag">-C</span> <span class="hljs-selector-tag">us</span><span class="hljs-selector-class">.dal</span><span class="hljs-selector-class">.net</span><span class="hljs-selector-pseudo">:6667</span>
</code></pre><p>This command will start up <strong>MERK</strong> and connect to three of these servers without any extra effort!</p>
<p>You can do a lot of things from the commandline. For a really complicated example, let&#39;s try this scenario. Here&#39;s what this commandline will do:</p>
<ul>
<li>Connect to Libera via SSL/TLS</li>
<li>Connect to DALnet via TCP/IP</li>
<li>Make sure that we reconnect automatically if we get disconnected from either of these servers</li>
<li>Join the <code>#merk</code> and <code>#python</code> channels on both networks</li>
<li>Make sure that we don&#39;t execute any connection scripts we have set up</li>
<li>Run in &quot;light mode&quot;, regardless of what the configuration settings say</li>
<li>Run a <strong>MERK</strong> script file named <code>stuff.merk</code> on connection, for both connections</li>
</ul>
<p>Here&#39;s the set of arguments that will make all of that happen:</p>
<pre><code>python merk<span class="hljs-selector-class">.py</span> -Ltx -s stuff.merk -S irc<span class="hljs-selector-class">.libera</span><span class="hljs-selector-class">.chat</span>:<span class="hljs-number">6697</span> -C us<span class="hljs-selector-class">.dal</span><span class="hljs-selector-class">.net</span>:<span class="hljs-number">6667</span> -c <span class="hljs-string">"#python"</span> -c <span class="hljs-string">"#merk"</span>
</code></pre><pre><code>merk<span class="hljs-selector-class">.exe</span> -Ltx -s stuff.merk -S irc<span class="hljs-selector-class">.libera</span><span class="hljs-selector-class">.chat</span>:<span class="hljs-number">6697</span> -C us<span class="hljs-selector-class">.dal</span><span class="hljs-selector-class">.net</span>:<span class="hljs-number">6667</span> -c <span class="hljs-string">"#python"</span> -c <span class="hljs-string">"#merk"</span>
</code></pre><p>All commandline options are what they say on the tin: <em>optional</em>. Just running the script with no commandline options will initally open up the connection dialog, and you can do just about everything completely inside the GUI.</p>
<h1 id="why-does-merk-exist-">Why does MERK exist?</h1>
<p>It&#39;s simple. I don&#39;t currently like any of the other IRC clients. I&#39;ve used many, <em>many</em> other IRC clients for Windows and Linux, and they just didn&#39;t feel <em>right</em>. They weren&#39;t customizable enough, didn&#39;t have features that I wanted, or just plain looked ancient. I wanted a GUI IRC client that looked and felt modern, and could be heavily customized. My previous IRC client was called <a href="https://github.com/nutjob-laboratories/erk"><strong>Ərk</strong></a>, and although I liked developing it and working on it, I honestly didn&#39;t use it that much. I fell out of love with the &quot;single window&quot; interface that so many other IRC clients use, and decided to try something &quot;new&quot; (and by &quot;new&quot; I mean 30 years old). I remembered using <a href="https://www.mirc.com/">mIRC</a> back when I was younger, and decided to try and write a new client that used the <a href="https://en.wikipedia.org/wiki/Multiple-document_interface">multiple-document interface</a> style I remember fondly. And thus, <strong>MERK</strong> was born!</p>
<p>I honestly think that <strong>MERK</strong> may be the most configurable IRC client ever created. With over 170 different settings to work with, you can configure <strong>MERK</strong> to look and operate <em>exactly</em> how you want. Want to display all channel userlists on the left, or not display userlists at all? You can do that. Want to turn off all the pretty stuff, and display only raw, (nearly) unaltered text? You can do that. Maybe you want to use text styles only on the chat display, and leave the userlists and text input alone? You can do that. One of the things I hated about <a href="http://xchat.org/">XChat</a>/<a href="https://hexchat.github.io/">Hexchat</a> is how un-configurable the UI is, and how most other clients require plugins or scripts to change the client UI. I wanted a client where you could alter or change most aspects of the UI without needed external tools or editing configuration files manually. With <strong>MERK</strong>, you can change all settings in the client and see the effects instantly. There are a few settings that can only be changed by editing the configuration files, but they are for settings most users will probably never change; but you can still change them and <strong>MERK</strong> will compensate, and not break the client!</p>
<h1 id="what-does-merk-mean">What does MERK mean?</h1>
<p>Well, if you were to pronounce &quot;IRC&quot; as a word and not an acronym, it would probably be pronounced <em>/Ərk/</em>. Since the client allows a user to connect to multiple IRC servers at the same time, well, that might be what the &quot;M&quot; stands for. Either that, or &quot;multiple-document interface&quot;. &quot;MDIIRC&quot; doesn&#39;t exactly roll off the tongue, so we combined the &quot;M&quot; with the word-pronunciation of IRC, and came up with <strong>MERK</strong>!</p>
<h1 id="does-merk-need-any-help-">Does MERK need any help?</h1>
<p>Yes! <strong>MERK</strong> is being written by me, <a href="https://github.com/danhetrick">Dan Hetrick</a>, a software developer that can not do everything that this piece of software needs. There&#39;s few things I need help with!</p>
<ul>
<li><strong>Icons and other graphics work</strong>. I am not a graphic designer, and I think that that shows in this project, heh. I need help with creating better icons, and a better logo for <strong>MERK</strong>. I&#39;m doing my best, here, but I&#39;m a computer programmer, not an artist!</li>
<li><strong>Packaging</strong>. <strong>MERK</strong> now has a <a href="https://www.pyinstaller.org/">PyInstaller</a>-based distribution! However, I can&#39;t seem to get PyInstaller working on a Linux binary for reasons that are beyond me. I&#39;d love some help on getting packaging for Linux, be it with PyInstaller or anything else that&#39;s easy for end-users to use. I also know next to nothing about making Python packages for use with  <code>pip</code>, but that&#39;s another thing I&#39;d love help with!</li>
<li><strong>DCC chat and file transfers</strong>. The DCC  functionality in Twisted is undocumented, and I&#39;ll be honest, I can&#39;t make heads or tails of it. I&#39;d love to be able to add this functionality to <strong>MERK</strong>, but I need help!</li>
<li><strong>Using MERK and giving me feedback</strong>. Let me know what you love about <strong>MERK</strong> and what you hate about <strong>MERK</strong>! Got ideas for ways you&#39;d like to customize the client? Features you&#39;d like? Let me know! I can&#39;t guarantee that I&#39;ll put in everything that you want, but I love hearing new ideas, and I love hearing about how people are using <strong>MERK</strong>!</li>
</ul>
<p>Contacting me is easy! Drop me an <a href="mailto:dhetrick@gmail.com">email</a> or say hi in the official <strong>MERK</strong> IRC channel: <code>#merk</code> on the Libera network (<code>irc.libera.chat</code>, port 6667 for TCP/IP, port 6697 for SSL/TLS).</p>

